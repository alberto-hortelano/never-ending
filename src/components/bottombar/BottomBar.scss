@use '../variables' as *;
@use 'sass:color';

:host {
    display: block;
    width: 100%;
    background: $color-bg-secondary;
    border-top: 2px solid $color-border-primary;
    box-shadow: 0 -2px 10px rgba(0, 0, 0, 0.1);
    z-index: $z-index-header;
    
    // Add padding for safe area on mobile devices (home indicator)
    @supports (padding: env(safe-area-inset-bottom)) {
        padding-bottom: env(safe-area-inset-bottom);
    }
}

.bottom-bar {
    position: relative;
}

.bar-content {
    padding: $spacing-sm;
    min-height: 3rem;
    
    @include md-up {
        padding: $spacing-md;
        min-height: 4rem;
    }
}

// Tab Navigation
.tab-navigation {
    display: flex;
    gap: $spacing-xs;
    margin-bottom: $spacing-sm;
    border-bottom: 1px solid $color-border-secondary;
    padding-bottom: $spacing-xs;
    
    @include md-up {
        gap: $spacing-sm;
        margin-bottom: $spacing-md;
    }
}

.tab-button {
    display: flex;
    align-items: center;
    gap: $spacing-xs;
    padding: $spacing-xs $spacing-sm;
    background: transparent;
    border: none;
    border-bottom: 2px solid transparent;
    color: $color-text-muted;
    cursor: pointer;
    transition: $transition-all;
    font-size: $font-size-sm;
    white-space: nowrap;
    
    @include md-up {
        padding: $spacing-sm $spacing-md;
        font-size: $font-size-base;
    }
    
    .tab-icon {
        font-size: $font-size-base;
        line-height: 1;
        
        @include sm-down {
            font-size: $font-size-lg;
        }
    }
    
    .tab-label {
        @include sm-down {
            display: none;
        }
    }
    
    &:hover {
        background: $color-bg-tertiary;
        color: $color-text-primary;
    }
    
    &.active {
        color: $color-highlight;
        border-bottom-color: $color-highlight;
        
        .tab-icon {
            filter: none;
        }
    }
    
    &.combat-tab {
        @include sm-down {
            flex: 1;
            justify-content: center;
        }
    }
}

.combat-toggle {
    margin-left: auto;
    display: flex;
    align-items: center;
    gap: $spacing-xs;
    padding: $spacing-xs $spacing-sm;
    background: $gray-600;
    border: 1px solid $color-border-secondary;
    border-radius: $border-radius-sm;
    color: $color-text-secondary;
    cursor: pointer;
    transition: $transition-all;
    font-size: $font-size-sm;
    
    @include md-up {
        padding: $spacing-sm $spacing-md;
    }
    
    .combat-icon {
        font-size: $font-size-base;
        line-height: 1;
    }
    
    .combat-label {
        @include sm-down {
            display: none;
        }
    }
    
    &:hover {
        background: $color-bg-hover;
        border-color: $color-highlight;
    }
    
    &.active {
        background: $color-danger;
        border-color: $color-danger;
        color: white;
        
        &:hover {
            background: color.adjust($color-danger, $lightness: -10%);
        }
    }
}

.actions-section {
    @include lg-up {
        display: flex;
        align-items: center;
        gap: $spacing-md;
    }
}

.actions-container {
    display: flex;
    flex-wrap: wrap;
    gap: $spacing-xs;
    align-items: center;
    min-height: 2.5rem;
    
    @include md-up {
        gap: $spacing-sm;
    }
    
    &:empty::after {
        content: 'Select a character to see available actions';
        color: $color-text-muted;
        font-style: italic;
        font-size: $font-size-sm;
    }
    
    &.has-actions:empty::after {
        display: none;
    }
}

.quick-actions {
    position: absolute;
    top: $spacing-sm;
    right: $spacing-sm;
    display: flex;
    gap: $spacing-xs;
    
    @include md-up {
        top: $spacing-md;
        right: $spacing-md;
        gap: $spacing-sm;
    }
    
    @include sm-down {
        display: none; // Hide on mobile to save space
    }
}

::slotted([slot="actions"]) {
    padding: $spacing-xs $spacing-md;
    background: $color-bg-tertiary;
    border: 1px solid $color-border-secondary;
    border-radius: $border-radius-sm;
    color: $color-text-primary;
    cursor: pointer;
    transition: $transition-all;
    
    &:hover {
        background: $color-highlight;
        border-color: $color-highlight;
        transform: translateY(-1px);
        box-shadow: $shadow-sm;
    }
}

::slotted([slot="quick-actions"]) {
    padding: $spacing-xs $spacing-sm;
    background: transparent;
    border: 1px solid $color-border-secondary;
    border-radius: $border-radius-sm;
    color: $color-text-secondary;
    cursor: pointer;
    transition: $transition-all;
    
    &:hover {
        background: $color-bg-tertiary;
        color: $color-text-primary;
    }
}