@use '../_variables' as *;
@use 'sass:map';

.character {
    @for $i from 0 through $orientations - 1 {
        $angle: $i * $degrees;
        $x: map.get($cosine-values, $angle);
        $y: map.get($cosine-values, normalizeAngle($angle + 90));

        &.rotate-#{$angle} {
            .head {
                .face {
                    box-shadow: calc(-25*#{$x} * var(--size)) calc(-4 * var(--size)) calc(7 * var(--size)) calc(1 * var(--size)) inset rgba(0, 0, 0, 0.8), 0 0 0 calc(4 * var(--size)) #6d6d6d;
                    top: calc((15 + 10*#{$y}) * var(--size));
                    left: calc((5 + 30*#{$x}) * var(--size));
                    transform: skewY(calc(-20deg*#{$x})) rotateY(calc(-40deg*#{$x}));

                    @if $y<0 {
                        display: none;
                    }
                }
            }

            .arm {
                &.right {
                    z-index: 15 + 20*$x;
                    top: calc((10 + 10*#{$x}) * var(--size));
                    right: calc((-5 + 35*#{$y}) * var(--size));

                    .rifle {
                        transform: skewY(calc(-20deg*#{$x})) rotateY(calc(-40deg*#{$x}));
                    }
                }

                &.left {
                    z-index: 15 - 20*$x;
                    top: calc((10 - 10*#{$x}) * var(--size));
                    left: calc((-5 + 35*#{$y}) * var(--size));
                }
            }

            .leg {

                &.right {
                    z-index: 15 + 10*$x;
                    top: calc((40 + 5*#{$x}) * var(--size));
                    right: calc((-15 + 15*#{$y}) * var(--size));
                }

                &.left {
                    z-index: 15 - 10*$x;
                    top: calc((40 - 5*#{$x}) * var(--size));
                    left: calc((-15 + 15*#{$y}) * var(--size));
                }
            }
        }
    }
}