@use '../variables' as *;

:host {
    width: var(--cell-width);
    height: var(--cell-width);
    display: flex;
    align-items: center;
    justify-content: center;
    position: absolute;
    left: calc(var(--cell-x, 0) * var(--cell-width));
    top: calc(var(--cell-y, 0) * var(--cell-width));
    box-sizing: border-box;
    box-shadow: $shadow-inner;
    background: $gray-200;
    transform-style: preserve-3d;
    perspective: 30vmin;
}

:host(.wall) {}

:host(.floor) {
    background-color: $color-bg-secondary;
    color: $color-text-dim;
}

:host(.highlight):after {
    content: '';
    background-color: $color-highlight;
    box-shadow: $shadow-inner-highlight;
    cursor: pointer;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
}

// Movement highlight (green/yellow)
:host(.highlight-movement):after {
    content: '';
    background-color: rgba(150, 255, 0, 0.3);
    box-shadow: 0 0 10px rgba(150, 255, 0, 0.5) inset;
    cursor: pointer;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    border: 1px solid rgba(150, 255, 0, 0.6);
}

:host(.highlight-intensity):before {
    content: '';
    // Red-based color for shooting/targeting
    $shooting-color: rgba(255, 0, 0, 0.6);
    background-color: rgba($shooting-color, var(--highlight-intensity, 0.5));
    box-shadow: 0 0 calc(15px * var(--highlight-intensity, 0.5)) rgba($shooting-color, calc(var(--highlight-intensity, 0.5) * 0.6)) inset;
    cursor: crosshair;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    transition: background-color $transition-duration-base ease-in-out;

    // Add a subtle pulsing effect for high intensity cells
    &:where([style*="--highlight-intensity: 0.9"],
        [style*="--highlight-intensity: 0.8"],
        [style*="--highlight-intensity: 1"]) {
        animation: pulse 1s ease-in-out infinite;
    }
}

@keyframes pulse {

    0%,
    100% {
        opacity: 1;
    }

    50% {
        opacity: 0.8;
    }
}

:host(.highlight-overwatch):after {
    content: '';
    // Blue-based color for overwatch
    $overwatch-color: rgba(0, 100, 255, 0.4);
    background-color: $overwatch-color;
    cursor: crosshair;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    // Add animated border effect
    border: 2px solid rgba(0, 150, 255, 0.8);
}

:host(.path) {
    background-color: $color-path;
    border: $border-width solid $color-path-border;
    z-index: 10;
}

// Combined highlight states - Purple/Magenta for cells that are both overwatch and reachable
:host(.highlight-overwatch.highlight-movement):after {
    content: '';
    // Solid purple/magenta color to clearly indicate combined state
    background-color: rgb(0 62 255 / 30%);
    cursor: pointer;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    // Thick purple border
    border: 3px solid rgba(220, 0, 255, 0.8);
}

// Add corner indicators for combined state
:host(.highlight-overwatch.highlight-movement):before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    background:
        // Top-left corner indicator (blue for overwatch)
        linear-gradient(135deg, rgba(0, 100, 255, 0.6) 0%, transparent 30%),
        // Bottom-right corner indicator (yellow for movement)
        linear-gradient(-45deg, rgba(255, 215, 0, 0.6) 0%, transparent 30%);
    z-index: 1;
}